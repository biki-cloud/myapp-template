/** @type {import('ts-jest').JestConfigWithTsJest} */
module.exports = {
  preset: "ts-jest",
  testEnvironment: "jsdom",
  moduleNameMapper: {
    "^@/(.*)$": "<rootDir>/$1",
    "^jose$": "<rootDir>/lib/infrastructure/auth/__mocks__/jose.ts",
    "^lib/infrastructure/db/drizzle$":
      "<rootDir>/lib/infrastructure/db/__mocks__/drizzle.ts",
  },
  setupFilesAfterEnv: ["<rootDir>/jest.setup.js"],
  testPathIgnorePatterns: [
    "<rootDir>/.next/",
    "<rootDir>/node_modules/",
    "<rootDir>/e2e/",
    "<rootDir>/playwright-report/",
  ],
  transform: {
    "^.+\\.(ts|tsx)$": "ts-jest",
  },
  transformIgnorePatterns: ["/node_modules/(?!@panva/hkdf)/"],
  moduleFileExtensions: ["ts", "tsx", "js", "jsx", "json", "node"],
  extensionsToTreatAsEsm: [".ts", ".tsx"],
  collectCoverage: true,
  coverageReporters: ["json-summary", "text", "lcov"],
  collectCoverageFrom: [
    "**/*.{js,ts}",
    "!**/*.d.ts",
    "!**/node_modules/**",
    "!**/.next/**",
    "!**/coverage/**",
    "!**/e2e/**",
    "!**/playwright-report/**",
    "!**/public/**",
    "!**/page.tsx",
    "!**/layout.tsx",
    "!**/not-found.tsx",
    "!**/error.tsx",
    "!**/loading.tsx",
    "!**/route.ts",
    "!**/*.config.{js,ts}",
    "!**/__tests__/**",
    "!**/__mocks__/**",
    "!**/types/**",
    "!**/test/**",
    "!**/components/ui/**",
    "!**/lib/local-setup/**",
    "!**/lib/infrastructure/db/seed.ts",
    "!**/lib/infrastructure/db/migrate.ts",
    "!**/lib/config/env.ts",
    "!**/lib/shared/test-utils/**",
    "!**/lib/shared/constants/**",
    "!**/middleware.ts",
  ],
  coverageThreshold: {
    global: {
      branches: 0,
      functions: 0,
      lines: 0,
      statements: 0,
    },
  },
  maxWorkers: 4,
  testTimeout: 30000,
  verbose: false,
  silent: true,
};
